import axios from 'axios';
import url from './getURL.js';
import sha1 from 'js-sha1';
import sha256 from 'js-sha256';
import Cookies from 'js-cookie';

const loginUser = async (user) => {
    try {
        // üîπ –ü–æ–ª—É—á–∞–µ–º —Å–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const saltResponse = await axios.get(`http://localhost:3000/users/getSalt/${user.username}`, {
            withCredentials: true,
        });

        const salt = saltResponse.data.salt;
        if (!salt) {
            console.error("–û—à–∏–±–∫–∞: –°–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", user.username);
            return null;
        }

        // üîπ –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å —Å —Å–æ–ª—å—é
        const hashedPassword = sha256(sha1(user.password + salt));

        // üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª–æ–≥–∏–Ω
        const loginResponse = await axios.post(
            "http://localhost:3000/users/login",
            { username: user.username, password: hashedPassword },
            { withCredentials: true }
        );

        // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∫—É–∫–∏
        const token = loginResponse.data.token;
        if (token) {
            Cookies.set("authToken", token, {
                expires: 1, // –¢–æ–∫–µ–Ω –∂–∏–≤—ë—Ç 1 –¥–µ–Ω—å
                secure: false, // ‚ùó –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –º–µ–Ω—è—Ç—å –Ω–∞ `true`
                sameSite: "strict",
            });
            console.log("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –∫—É–∫–∏:", token);
        } else {
            console.error("‚ùå –û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω!");
        }

        return loginResponse.data.data;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", error.response?.data || error.message);
        return null;
    }
};

export default loginUser;
